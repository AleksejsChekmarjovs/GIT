1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
git checkout <filename>   отменяет изменения в файле и восстанавливает его последнюю сохраненную версию

2.Как вернуть файл из индекса в рабочий каталог?
Определите файл, который хотите удалить из индекса Git и вернуть в рабочий каталог.
git status
git reset HEAD <filename>

3.Как отменить ошибочный commit ?
просмотреть историю коммитов и скопировать идентификатор нужного вам коммита.
git log
git reset --hard <commit-id> или
git reset --soft <commit-id>

4.Как создать новую ветку и переключится в нее?
git checkout -b <branch-name> 

5.Fast-forward merge и non fast-forward merge отличаются тем, как Git интегрирует изменения из одной ветки в другую ветку.
Fast-forward merge происходит, когда ветка, в которую вы хотите объединить другую ветку, не имеет собственных коммитов после того, как была создана другая ветка. В этом случае Git просто перемещает указатель на текущую ветку вперед до последнего коммита из другой ветки. При этом история коммитов в двух ветках остается прямой линией.
Non-fast-forward merge происходит, когда в текущей ветке были сделаны коммиты после того, как была создана другая ветка. В этом случае Git создает новый коммит, который объединяет изменения из обеих веток.

6.Когда может возникнуть конфликт слияния веток, как  его разрешить?
Конфликт слияния веток может возникнуть, когда две ветки содержат изменения в одной и той же области кода, которые не могут быть автоматически объединены Git. Это может произойти, например, когда два разработчика работают над одним и тем же файлом, и каждый вносит свои изменения в разные строки.
Открыть конфликтный файл в текстовом редакторе и найти метки конфликта слияния  и выбрать нужные строки кода. Вы можете выбрать изменения из вашей ветки, изменения из другой ветки или обе варианты
Удалить метки конфликта слияния и сохранить файл.

7.Можно ли удалить ветку? Как? 
   git branch -d <branch-name>
   git branch origin --delete <branch-name>
    
